// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CAspect;
class CAxes;
class CCanvas;
class CExport;
class CTitles;
class CPen1;
class CImport;
class CLegend;
class CPage;
class CPanel;
class CPrinter;
class CScroll;
class CSeries;
class CWalls;
class CZoom;
class CEnvironment;
class CTeePoint2D;
class CToolList;
class CSeriesList;
class CTeeRect;
class CAnimationList;
class CTeePanning;
class CThemesList;
class CTeeAnimate;
class CHover;

/////////////////////////////////////////////////////////////////////////////
// CSubChartChart wrapper class

class CSubChartChart : public COleDispatchDriver
{
public:
	CSubChartChart() {}		// Calls COleDispatchDriver default constructor
	CSubChartChart(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
	CSubChartChart(const CSubChartChart& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
public:

// Operations
public:
	CAspect GetAspect();
	CAxes GetAxis();
	CCanvas GetCanvas();
	BOOL GetClipPoints();
	void SetClipPoints(BOOL bNewValue);
	short GetCursor();
	void SetCursor(short nNewValue);
	short GetDragCursor();
	void SetDragCursor(short nNewValue);
	long GetDragMode();
	void SetDragMode(long nNewValue);
	BOOL GetEnabled();
	void SetEnabled(BOOL bNewValue);
	CExport GetExport();
	CTitles GetFooter();
	CPen1 GetFrame();
	CTitles GetHeader();
	long GetHeight();
	void SetHeight(long nNewValue);
	CImport GetImport();
	long GetLeft();
	void SetLeft(long nNewValue);
	CLegend GetLegend();
	CPage GetPage();
	CPanel GetPanel();
	CPrinter GetPrinter();
	CScroll GetScroll();
	long GetSeriesCount();
	long GetTop();
	void SetTop(long nNewValue);
	BOOL GetVisible();
	void SetVisible(BOOL bNewValue);
	CWalls GetWalls();
	long GetWidth();
	void SetWidth(long nNewValue);
	CZoom GetZoom();
	void AboutBox();
	long AddSeries(long SeriesClass);
	void ChangeSeriesType(long SeriesIndex, long NewSeriesType);
	long CloneSeries(long SourceSeriesIndex);
	void Draw(const VARIANT& DC, long Left, long Top, long Right, long Bottom);
	void ExchangeSeries(long Series1, long Series2);
	double GetDateTimeStep(long DateTimeStep);
	unsigned long GetFreeSeriesColor(BOOL CheckBackgroundColor);
	CSeries GetLabelsSeries(long DestAxis);
	BOOL IsFreeSeriesColor(unsigned long AColor, BOOL CheckBackgroundColor);
	void RemoveAllSeries();
	void RemoveSeries(long SeriesIndex);
	void Repaint();
	CString SeriesTitleLegend(long ASeriesIndex);
	void ShowEditor(long SeriesIndex);
	void StopMouse();
	BOOL GetTimerEnabled();
	void SetTimerEnabled(BOOL bNewValue);
	long GetTimerInterval();
	void SetTimerInterval(long nNewValue);
	BOOL GetAutoRepaint();
	void SetAutoRepaint(BOOL bNewValue);
	void EditOneSeries(long SeriesIndex);
	CEnvironment GetEnvironment();
	long GetChartLink();
	CTeePoint2D GetMousePosition();
	void ChartRect(long Left, long Top, long Right, long Bottom);
	CToolList GetTools();
	CTitles GetSubHeader();
	CTitles GetSubFooter();
	void ClearChart();
	void RefreshData();
	CSeries Series(long SeriesIndex);
	BOOL ShowThemesEditor();
	void SetTheme(long aTheme, long aPalette);
	void ApplyPalette(long paletteIndex);
	void ApplyCustomPalette(const VARIANT& colorArray);
	CSeriesList GetSeriesList();
	CString GetHint();
	void SetHint(LPCTSTR lpszNewValue);
	BOOL GetShowHint();
	void SetShowHint(BOOL bNewValue);
	CString GetVersion();
	BOOL GetCustomChartRect();
	void SetCustomChartRect(BOOL bNewValue);
	BOOL GetMonochrome();
	void SetMonochrome(BOOL bNewValue);
	short GetOriginalCursor();
	void SetOriginalCursor(short nNewValue);
	BOOL GetPrinting();
	long GetChartHeight();
	long GetChartWidth();
	CTeeRect GetChartBounds();
	BOOL GetBufferedDisplay();
	void SetBufferedDisplay(BOOL bNewValue);
	BOOL GetCanClip();
	CTeeRect GetGetChartRect();
	BOOL EditStrings(BSTR* Strings, BOOL ReadOnly);
	long GetLanguage();
	void SetLanguage(long nNewValue);
	long GetLanguaged();
	void SetLanguaged(long nNewValue);
	long MultiLineTextWidth(LPCTSTR AString, long NumLines, long TextFormat);
	long MultiLineTextHeight(LPCTSTR AString, long NumLines, long TextFormat);
	CAnimationList GetAnimations();
	CSeries CreateNewSeriesGallery(long AGalleryWidth, long AGalleryHeight);
	CTeePanning GetPanning();
	long ActiveSeriesLegend(long ItemIndex);
	void ShowSeriesEditor(long SeriesIndex);
	long CloneSeriesFromChart(long ChartLink, long SeriesIndex);
	long CloneToolFromChart(long ChartLink, long ToolIndex);
	CSeries CreateSeriesChangeGallery(long AGalleryWidth, long AGalleryHeight, long SeriesIndex);
	CThemesList GetThemes();
	long GetZoomWheel();
	void SetZoomWheel(long nNewValue);
	void SetChartRect(long Left, long Top, long Right, long Bottom);
	CTeeAnimate GetAnimate();
	VARIANT GetChartLinkx64();
	long CloneSeriesFromChartx64(const VARIANT& ChartLinkx64, long SeriesIndex);
	long CloneToolFromChartx64(const VARIANT& ChartLinkx64, long ToolIndex);
	CHover GetHover();
};
