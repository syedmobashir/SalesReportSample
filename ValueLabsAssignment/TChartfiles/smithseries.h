// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CTeePoint2D;
class CTeeShadow;
class CBrush1;
class CPen1;
class CPointer;
class CTeeFont;
class CValueList;

/////////////////////////////////////////////////////////////////////////////
// CSmithSeries wrapper class

class CSmithSeries : public COleDispatchDriver
{
public:
	CSmithSeries() {}		// Calls COleDispatchDriver default constructor
	CSmithSeries(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
	CSmithSeries(const CSmithSeries& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
public:

// Operations
public:
	long GetXRadius();
	void SetXRadius(long nNewValue);
	long GetYRadius();
	void SetYRadius(long nNewValue);
	long GetXCenter();
	long GetYCenter();
	long GetCircleWidth();
	long GetCircleHeight();
	unsigned long GetCircleBackColor();
	void SetCircleBackColor(unsigned long newValue);
	BOOL GetCircled();
	void SetCircled(BOOL bNewValue);
	long GetRotationAngle();
	void SetRotationAngle(long nNewValue);
	CTeePoint2D AngleToPoint(double Angle, double AXRadius, double AYRadius);
	double PointToAngle(long XCoord, long YCoord);
	double PointToRadius(long XCoord, long YCoord);
	double GetCustomXRadius();
	void SetCustomXRadius(double newValue);
	double GetCustomYRadius();
	void SetCustomYRadius(double newValue);
	CTeeShadow GetShadow();
	CBrush1 GetCircleBrush();
	CPen1 GetCirclePen();
	BOOL GetColorEachLine();
	void SetColorEachLine(BOOL bNewValue);
	CPointer GetPointer();
	BOOL GetPointerBehind();
	void SetPointerBehind(BOOL bNewValue);
	long GetDrawStyle();
	void SetDrawStyle(long nNewValue);
	long GetTreatNulls();
	void SetTreatNulls(long nNewValue);
	CPen1 GetCCirclePen();
	BOOL GetCLabels();
	void SetCLabels(BOOL bNewValue);
	CTeeFont GetCLabelsFont();
	CValueList GetResistenceValues();
	CValueList GetReactanceValues();
	CPen1 GetRCirclePen();
	BOOL GetRLabels();
	void SetRLabels(BOOL bNewValue);
	CTeeFont GetRLabelsFont();
	CString GetImagSymbol();
	void SetImagSymbol(LPCTSTR lpszNewValue);
};
