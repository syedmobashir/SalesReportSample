// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CTeePoint2D;
class CTeeShadow;
class CBrush1;
class CValueList;
class CPieOtherSlice;
class CExplodedSlices;
class CPen1;
class CGradient;
class CPieMarks;
class CPieAngle;

/////////////////////////////////////////////////////////////////////////////
// CDonutSeries wrapper class

class CDonutSeries : public COleDispatchDriver
{
public:
	CDonutSeries() {}		// Calls COleDispatchDriver default constructor
	CDonutSeries(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
	CDonutSeries(const CDonutSeries& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
public:

// Operations
public:
	long GetXRadius();
	void SetXRadius(long nNewValue);
	long GetYRadius();
	void SetYRadius(long nNewValue);
	long GetXCenter();
	long GetYCenter();
	long GetCircleWidth();
	long GetCircleHeight();
	unsigned long GetCircleBackColor();
	void SetCircleBackColor(unsigned long newValue);
	BOOL GetCircled();
	void SetCircled(BOOL bNewValue);
	long GetRotationAngle();
	void SetRotationAngle(long nNewValue);
	CTeePoint2D AngleToPoint(double Angle, double AXRadius, double AYRadius);
	double PointToAngle(long XCoord, long YCoord);
	double PointToRadius(long XCoord, long YCoord);
	double GetCustomXRadius();
	void SetCustomXRadius(double newValue);
	double GetCustomYRadius();
	void SetCustomYRadius(double newValue);
	CTeeShadow GetShadow();
	CBrush1 GetCircleBrush();
	BOOL GetUsePatterns();
	void SetUsePatterns(BOOL bNewValue);
	CValueList GetPieValues();
	BOOL GetDark3D();
	void SetDark3D(BOOL bNewValue);
	long GetExplodeBiggest();
	void SetExplodeBiggest(long nNewValue);
	CPieOtherSlice GetOtherSlice();
	CExplodedSlices GetExplodedSlice();
	CPen1 GetPiePen();
	long GetAngleSize();
	void SetAngleSize(long nNewValue);
	BOOL GetAutoMarkPosition();
	void SetAutoMarkPosition(BOOL bNewValue);
	CGradient GetGradient();
	long GetSliceHeight(long Index);
	void SetSliceHeight(long Index, long nNewValue);
	long GetDarkPen();
	void SetDarkPen(long nNewValue);
	long GetMultiPie();
	void SetMultiPie(long nNewValue);
	CPieMarks GetPieMarks();
	long GetGradientBright();
	void SetGradientBright(long nNewValue);
	long GetEdgeStyle();
	void SetEdgeStyle(long nNewValue);
	long GetBevelPercent();
	void SetBevelPercent(long nNewValue);
	long GetTransparency();
	void SetTransparency(long nNewValue);
	CPieAngle GetAngles(long Index);
	BOOL GetUniqueCustomRadius();
	void SetUniqueCustomRadius(BOOL bNewValue);
	long GetDonutPercent();
	void SetDonutPercent(long nNewValue);
};
